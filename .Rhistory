legend.title.align = 0.5,
legend.title.position = "top",
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.text.y = element_text(color = "black", face = "bold", size = 12, angle=0),
strip.background.y = element_blank()) +
facet_grid2(rows = vars(Category),
cols = vars(factor(Month, levels = c("July", "August", "September", "October", "November"))),
scales = "free", space = "free",
labeller = labeller(Category = label_wrap_gen(width = 10)))
ggsave("data/results/Heatmap_RELab_collapsed_site.png", width = 10, height = 7)
ggsave("data/results/Heatmap_RELab_collapsed_site.png", width = 10, height = 10)
ggsave("data/results/Heatmap_RELab_collapsed_site.png", width = 10, height = 12)
data
data %>%
### subset data
filter(!Category == "Other" & !Category == "Livestock" & !Category == "unassigned" & !Category == "Human") %>%
## get rid of species with 0 counts in surface samples (ones that only show up in bottom samples)
group_by(Species_name) %>%
filter(!(sum(rel_ab) == 0)) %>%
## replace zeros with NAs for plotting
replace_with_na_all(condition = ~.x == 0.00000)
data
data_reads %>%
### subset data
filter(!Category == "Other" & !Category == "Livestock" & !Category == "unassigned" & !Category == "Human") %>%
subset(Depth == "Bottom")
data %>%
### subset data
filter(!Category == "Other" & !Category == "Livestock" & !Category == "unassigned" & !Category == "Human") %>%
subset(Depth == "Bottom") %>%
## get rid of species with 0 counts in surface samples (ones that only show up in bottom samples)
group_by(Species_name) %>%
filter((sum(rel_ab) > 0)) %>% ungroup() %>%
## replace zeros with NAs for plotting
replace_with_na_all(condition = ~.x == 0.00000) %>%
## plot
ggplot(., aes(x=Site, y=Common_name)) +
geom_tile(aes(fill = rel_ab), color = "black") +
theme_classic() +
labs(fill = "Relative Abundance (%)") +
ylab("Common name") +
xlab("Site") +
scale_fill_gradient(na.value = "white", low = "lightskyblue2", high = "#0C4D66") + #, direction=1, type = "seq",
theme(axis.text.x = element_text(angle = 90, size=6, color="grey25", hjust = 1),
legend.text = element_text(size = 8, color="black"),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=14, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=14, face="bold"),
axis.text.y = element_text(colour = 'black', size = 8),
legend.position = c(-0.11, -0.04),
legend.key.height = unit(5, 'mm'),
legend.direction = "horizontal",
legend.key.width = unit(5, 'mm'),
legend.title.align = 0.5,
legend.title.position = "top",
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.text.y = element_text(color = "black", face = "bold", size = 12, angle=0),
strip.background.y = element_blank(),
strip.clip = "off") +
facet_grid2(Category~factor(Month, levels = c("July", "August", "September", "October", "November")),
scales = "free", space = "free",
labeller = labeller(Category = label_wrap_gen(width = 10)))
read_xlsx("data/results/Rawreads_matrix.xlsx")
read_xlsx("data/results/Rawreads_matrix.xlsx") %>%
gather("sampleID", "reads", c(Aug_501_1_B:Sep_VW_S7_S))
meta <- read_xlsx("data/metadata/full_metadata.xlsx")
meta
read_xlsx("data/results/Relative_abundance_longformat.xlsx") %>%
mutate(across(c(rel_ab), ~ round(.x, 5)))
data_reads <- read_xlsx("data/results/Rawreads_matrix.xlsx") %>%
gather("sampleID", "reads", c(Aug_501_1_B:Sep_VW_S7_S)) %>%
### join with metadata
left_join(., meta, by = "sampleID")
read_xlsx("data/results/Relative_abundance_longformat.xlsx") %>%
mutate(across(c(rel_ab), ~ round(.x, 5)))
data_reads <- read_xlsx("data/results/Rawreads_matrix.xlsx") %>%
gather("sampleID", "reads", c(Aug_501_1_B:Sep_VW_S7_S)) %>%
### join with metadata
left_join(., meta, by = "sampleID")
read_xlsx("data/results/Rawreads_matrix.xlsx") %>%
gather("sampleID", "reads", c(Aug_501_1_B:Sep_VW_S7_S)) %>%
### join with metadata
left_join(., meta, by = "sampleID")
read_xlsx("data/results/Rawreads_matrix.xlsx") %>%
gather("sampleID", "reads", c(Aug_501_1_B:Sep_VW_S7_S)) %>%
### join with metadata
left_join(., meta, by = "sampleID") %>%
### calculating total reads
group_by(SampleType, Lease_area, Depth, Month) %>%
mutate(total_sum = sum(reads))
read_xlsx("data/results/Rawreads_matrix.xlsx") %>%
gather("sampleID", "reads", c(Aug_501_1_B:Sep_VW_S7_S)) %>%
### join with metadata
left_join(., meta, by = "sampleID") %>%
### calculating total reads
group_by(SampleType, Lease_area, Depth, Month) %>%
mutate(total_sum = sum(reads)) %>%
## sum by species name too
group_by(SampleType, Lease_area, Depth, Month, Species_name, Common_name, Category) %>%
## sum down column by species name and sample to collapse
mutate(spp_reads = sum(reads)) %>%
### calculating relative abundance
mutate(rel_ab = spp_reads/total_sum)
data_reads <- read_xlsx("data/results/Rawreads_matrix.xlsx") %>%
gather("sampleID", "reads", c(Aug_501_1_B:Sep_VW_S7_S)) %>%
### join with metadata
left_join(., meta, by = "sampleID") %>%
### calculating total reads
group_by(SampleType, Lease_area, Depth, Month) %>%
mutate(total_sum = sum(reads)) %>%
## sum by species name too
group_by(SampleType, Lease_area, Depth, Month, Species_name, Common_name, Category) %>%
## sum down column by species name and sample to collapse
mutate(spp_reads = sum(reads)) %>%
### calculating relative abundance
mutate(rel_ab = spp_reads/total_sum)
data_reads %>%
### subset data
filter(!Category == "Other" & !Category == "Livestock" & !Category == "unassigned" & !Category == "Human") %>%
subset(Depth == "Bottom") %>%
group_by(Species_name) %>%
filter(!(sum(rel_ab) == 0)) %>%
## replace zeros with NAs for plotting
replace_with_na_all(condition = ~.x == 0.00000) %>%
## adding column for lease area x sample type
unite(sample_group, Lease_area, SampleType, sep = " ", remove=F) %>%
## plot
ggplot(., aes(x=sample_group, y=Common_name)) +
geom_tile(aes(fill = rel_ab), color = "black") +
theme_classic() +
labs(fill = "Relative Abundance (%)") +
ylab("Common name") +
xlab("Site") +
scale_fill_gradient(na.value = "white", low = "lightskyblue2", high = "#0C4D66") + #, direction=1, type = "seq",
theme(axis.text.x = element_text(angle = 45, size=6, color="grey25", hjust = 1),
legend.text = element_text(size = 8, color="black"),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=14, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=14, face="bold"),
axis.text.y = element_text(colour = 'black', size = 8),
legend.position = c(-0.15, -0.04),
legend.key.height = unit(5, 'mm'),
legend.direction = "horizontal",
legend.key.width = unit(5, 'mm'),
legend.title.align = 0.5,
legend.title.position = "top",
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.text.y = element_text(color = "black", face = "bold", size = 12, angle=0),
strip.background.y = element_blank()) +
facet_grid2(rows = vars(Category),
cols = vars(factor(Month, levels = c("July", "August", "September", "October", "November"))),
scales = "free", space = "free",
labeller = labeller(Category = label_wrap_gen(width = 10)))
data_reads %>%
### subset data
filter(!Category == "Other" & !Category == "Livestock" & !Category == "unassigned" & !Category == "Human") %>%
subset(Depth == "Bottom") %>%
group_by(Species_name) %>%
filter(!(sum(rel_ab) == 0)) %>%
## replace zeros with NAs for plotting
replace_with_na_all(condition = ~.x == 0.00000) %>%
## adding column for lease area x sample type
unite(sample_group, Lease_area, SampleType, sep = " ", remove=F) %>%
## plot
ggplot(., aes(x=sample_group, y=Common_name)) +
geom_tile(aes(fill = rel_ab), color = "black") +
theme_classic() +
labs(fill = "Relative Abundance (%)") +
ylab("Common name") +
xlab("Site") +
scale_fill_gradient(na.value = "white", low = "lightskyblue2", high = "#0C4D66") + #, direction=1, type = "seq",
theme(axis.text.x = element_text(angle = 45, size=6, color="grey25", hjust = 1),
legend.text = element_text(size = 8, color="black"),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=14, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=14, face="bold"),
axis.text.y = element_text(colour = 'black', size = 8),
legend.position = c(-0.15, -0.04),
legend.key.height = unit(5, 'mm'),
legend.direction = "horizontal",
legend.key.width = unit(5, 'mm'),
legend.title.align = 0.5,
legend.title.position = "top",
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.text.y = element_text(color = "black", face = "bold", size = 12, angle=0),
strip.background.y = element_blank()) +
facet_grid2(rows = vars(Category),
cols = vars(factor(Month, levels = c("July", "August", "September", "October", "November"))),
scales = "free", space = "free",
labeller = labeller(Category = label_wrap_gen(width = 10)))
ggsave("data/results/Heatmap_RELab_collapsed_site.png", width = 10, height = 12)
data_reads %>%
### subset data
filter(!Category == "Other" & !Category == "Livestock" & !Category == "unassigned" & !Category == "Human") %>%
subset(Depth == "Bottom") %>%
group_by(Species_name) %>%
filter(!(sum(rel_ab) == 0)) %>%
## replace zeros with NAs for plotting
replace_with_na_all(condition = ~.x == 0.00000) %>%
## adding column for lease area x sample type
unite(sample_group, Lease_area, SampleType, sep = " ", remove=F) %>%
## plot
ggplot(., aes(x=sample_group, y=Common_name)) +
geom_tile(aes(fill = rel_ab), color = "black") +
theme_classic() +
labs(fill = "Relative Abundance (%)") +
ylab("Common name") +
xlab("Site") +
scale_fill_gradient(na.value = "white", low = "lightskyblue2", high = "#0C4D66") + #, direction=1, type = "seq",
theme(axis.text.x = element_text(angle = 45, size=6, color="grey25", hjust = 1),
legend.text = element_text(size = 8, color="black"),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=14, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=14, face="bold"),
axis.text.y = element_text(colour = 'black', size = 8),
legend.position = c(-0.25, -0.07),
legend.key.height = unit(5, 'mm'),
legend.direction = "horizontal",
legend.key.width = unit(5, 'mm'),
legend.title.align = 0.5,
legend.title.position = "top",
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.text.y = element_text(color = "black", face = "bold", size = 12, angle=0),
strip.background.y = element_blank()) +
facet_grid2(rows = vars(Category),
cols = vars(factor(Month, levels = c("July", "August", "September", "October", "November"))),
scales = "free", space = "free",
labeller = labeller(Category = label_wrap_gen(width = 10)))
ggsave("data/results/Heatmap_RELab_collapsed_site.png", width = 10, height = 12)
data_reads %>%
### subset data
filter(!Category == "Other" & !Category == "Livestock" & !Category == "unassigned" & !Category == "Human") %>%
subset(Depth == "Bottom") %>%
group_by(Species_name) %>%
filter(!(sum(rel_ab) == 0)) %>%
## replace zeros with NAs for plotting
replace_with_na_all(condition = ~.x == 0.00000) %>%
## adding column for lease area x sample type
unite(sample_group, Lease_area, SampleType, sep = " ", remove=F) %>%
## plot
ggplot(., aes(x=sample_group, y=Common_name)) +
geom_tile(aes(fill = rel_ab), color = "black") +
theme_classic() +
labs(fill = "Relative Abundance (%)") +
ylab("Common name") +
xlab("Site") +
scale_fill_gradient(na.value = "white", low = "lightskyblue2", high = "#0C4D66") + #, direction=1, type = "seq",
theme(axis.text.x = element_text(angle = 45, size=6, color="grey25", hjust = 1),
legend.text = element_text(size = 8, color="black"),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=14, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=14, face="bold"),
axis.text.y = element_text(colour = 'black', size = 8),
legend.position = c(-0.28, -0.07),
legend.key.height = unit(5, 'mm'),
legend.direction = "horizontal",
legend.key.width = unit(5, 'mm'),
legend.title.align = 0.5,
legend.title.position = "top",
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.text.y = element_text(color = "black", face = "bold", size = 12, angle=0),
strip.background.y = element_blank()) +
facet_grid2(rows = vars(Category),
cols = vars(factor(Month, levels = c("July", "August", "September", "October", "November"))),
scales = "free", space = "free",
labeller = labeller(Category = label_wrap_gen(width = 10)))
ggsave("data/results/Heatmap_RELab_collapsed_site.png", width = 10, height = 12)
library(ggplot2) ## for plotting
library(dplyr) ## for data table manipulation
library(tidyr) ## for data table manipulation
library(readr) ## for reading in tsv files
library(readxl) ## for reading in excel files
library(stringr) ## for data transformation
library(strex) ## for data transformation
library(writexl) ## for excel output
library(purrr) ## for data transformation
library(tidyverse) ## for data transformation
## for stats
library(vegan)
library(stats)
library(devtools)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
meta <- read_xlsx("data/metadata/full_metadata.xlsx")
data <- read_xlsx("data/results/Relative_abundance_longformat.xlsx") %>%
dplyr::select(-Latitude, -Longitude, -`Sequencing Round 1`, -Category, -Common_name) %>%
spread(Species_name, rel_ab) %>%
filter(!SampleType == "Blank")
data_matrix <- data %>% dplyr::select(sampleID, `Alopias vulpinus`:`Urophycis sp`) %>%
column_to_rownames(var = "sampleID")
bottom <- data %>%
subset(Depth == "Bottom")
bottom_matrix <- bottom %>% dplyr::select(sampleID, `Alopias vulpinus`:`Urophycis sp`) %>%
column_to_rownames(var = "sampleID")
### no SF
bottom_noSF <- bottom %>% subset(!Lease_area == "South Fork")
bottom_noSF_matrix <- bottom_noSF %>%
dplyr::select(sampleID, `Alopias vulpinus`:`Urophycis sp`) %>%
column_to_rownames(var = "sampleID")
### REVOLUTION WIND control vs inside WEA (bottom sampling)
bottom_REV <- bottom %>% subset(Lease_area == "Revolution Wind")
bottom_REV_matrix <- bottom_REV %>%
dplyr::select(sampleID, `Alopias vulpinus`:`Urophycis sp`) %>%
column_to_rownames(var = "sampleID")
### VINEYARD WIND 1 control vs inside WEA (bottom sampling)
bottom_VW <- bottom %>% subset(Lease_area == "Vineyard Wind 1")
bottom_VW_matrix <- bottom_VW %>%
dplyr::select(sampleID, `Alopias vulpinus`:`Urophycis sp`) %>%
column_to_rownames(var = "sampleID")
adonis2(data_matrix ~ Month*Depth*SampleType*Lease_area, data = data, method='eu', permutations = 99)
adonis2(bottom_noSF_matrix ~ Month*SampleType*Lease_area, data = bottom_noSF, method='eu', permutations = 99)
### Revolution Control vs Inside WEA
adonis2(bottom_REV_matrix ~ Month*SampleType, data = bottom_REV, method='eu', permutations = 99)
### VW1 Control vs Inside WEA
adonis2(bottom_VW_matrix ~ Month*SampleType, data = bottom_VW, method='eu', permutations = 99)
vare.mds <- metaMDS(bottom_noSF_matrix, distance = "bray")
data.scores <- as.data.frame(scores(vare.mds)$sites) %>%
rownames_to_column(var = "sampleID") %>%
left_join(., meta, by = "sampleID")
mean_data <- data.scores %>%
mutate(Month = factor(Month, levels = c("July", "August", "September", "October", "November"))) %>%
group_by(Month, Lease_area) %>%
summarise(meanNMDS1 = mean(NMDS1), meanNMDS2 = mean(NMDS2)) %>%
ungroup()
### plot
data.scores %>%
mutate(Month = factor(Month, levels = c("July", "August", "September", "October", "November"))) %>%
ggplot(., aes(x=NMDS1, y=NMDS2, fill=SampleType, shape=Lease_area, linetype = SampleType)) +
geom_point(fill_alpha = 0.1, size=2.5, color = "black") +
stat_ellipse(level = 0.95, size=1, alpha=0.2) +
theme_bw() +
guides(fill = "none", color = guide_legend(override.aes = list(alpha = 1))) +
labs(shape = "Lease area", color = "Sample Type") +
scale_shape_manual(values = c(21,22)) +
scale_fill_manual(values = c("white", "grey30")) +
scale_linetype_manual(values = c("solid", "dashed")) +
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=12, face="bold"),
axis.text.y = element_text(colour = 'black', size = 10),
axis.text.x = element_text(colour = 'black', size = 10),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.background = element_rect(color= "black", fill = "white")
) +
facet_wrap(~Lease_area)
ggsave("data/results/NMDS_controlvinside.png", width = 6, height = 8)
### plot
data.scores %>%
mutate(Month = factor(Month, levels = c("July", "August", "September", "October", "November"))) %>%
ggplot(., aes(x=NMDS1, y=NMDS2, fill=Month, color=Month, shape=Lease_area)) +
geom_point(alpha=0.2, size=2.5, stroke=0.85) +
stat_ellipse(level = 0.95, size=1, alpha=0.2) +
geom_path(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2, group = Lease_area), color="black", linetype="solid",
size=1.15, arrow = arrow(length = unit(0.3, "cm"))) +
geom_point(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2), color="black", size=4) +
theme_bw() +
guides(fill = "none", color = guide_legend(override.aes = list(alpha = 1))) +
labs(shape = "Lease area") +
scale_fill_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_color_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_shape_manual(values = c(21,22)) +
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=12, face="bold"),
axis.text.y = element_text(colour = 'black', size = 10),
axis.text.x = element_text(colour = 'black', size = 10),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.background = element_rect(color= "black", fill = "white")
) +
facet_wrap(~Lease_area, ncol=1)
### plot
data.scores %>%
mutate(Month = factor(Month, levels = c("July", "August", "September", "October", "November"))) %>%
ggplot(., aes(x=NMDS1, y=NMDS2, fill=Month, color=Month, shape=Lease_area)) +
geom_point(alpha=0.2, size=2.5, stroke=0.85) +
stat_ellipse(level = 0.95, size=1, alpha=0.2) +
geom_path(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2, group = Lease_area), color="black", linetype="solid",
size=1.15, arrow = arrow(length = unit(0.3, "cm"))) +
geom_point(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2), color="black", size=4) +
theme_bw() +
guides(fill = "none", color = guide_legend(override.aes = list(alpha = 1))) +
labs(shape = "Lease area") +
scale_fill_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_color_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_shape_manual(values = c(21,22)) +
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=12, face="bold"),
axis.text.y = element_text(colour = 'black', size = 10),
axis.text.x = element_text(colour = 'black', size = 10),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.background = element_rect(color= "black", fill = "white")
) +
facet_wrap(~Lease_area, ncol=2)
### plot
data.scores %>%
mutate(Month = factor(Month, levels = c("July", "August", "September", "October", "November"))) %>%
ggplot(., aes(x=NMDS1, y=NMDS2, fill=Month, color=Month, shape=Lease_area)) +
geom_point(alpha=0.2, size=2.5, stroke=0.85) +
stat_ellipse(level = 0.95, size=1, alpha=0.2) +
geom_path(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2, group = Lease_area), color="black", linetype="solid",
size=1.15, arrow = arrow(length = unit(0.3, "cm"))) +
geom_point(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2), color="black", size=4) +
theme_bw() +
guides(fill = "none", color = guide_legend(override.aes = list(alpha = 1))) +
labs(shape = "Lease area") +
scale_fill_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_color_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_shape_manual(values = c(21,22)) +
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=12, face="bold"),
axis.text.y = element_text(colour = 'black', size = 10),
axis.text.x = element_text(colour = 'black', size = 10),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.background = element_rect(color= "black", fill = "white")
) +
facet_wrap(~Lease_area, ncol=2)
ggsave("data/results/NMDS.png", width = 8, height = 5)
### plot
data.scores %>%
mutate(Month = factor(Month, levels = c("July", "August", "September", "October", "November"))) %>%
ggplot(., aes(x=NMDS1, y=NMDS2, fill=Month, color=Month, shape=Lease_area)) +
geom_point(alpha=0.2, size=2.5, stroke=0.85) +
stat_ellipse(level = 0.95, size=1, alpha=0.2) +
geom_path(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2, group = Lease_area), color="black", linetype="solid",
size=1.15, arrow = arrow(length = unit(0.3, "cm"))) +
geom_point(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2), color="black", size=4) +
theme_bw() +
guides(fill = "none", color = guide_legend(override.aes = list(alpha = 1))) +
labs(shape = "Lease area") +
scale_fill_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_color_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_shape_manual(values = c(21,22)) +
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=12, face="bold"),
axis.text.y = element_text(colour = 'black', size = 10),
axis.text.x = element_text(colour = 'black', size = 10),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.background = element_rect(color= "black", fill = "white")
) +
facet_wrap(~Lease_area, ncol=2)
ggsave("data/results/NMDS.png", width = 8, height = 4)
### plot
data.scores %>%
mutate(Month = factor(Month, levels = c("July", "August", "September", "October", "November"))) %>%
ggplot(., aes(x=NMDS1, y=NMDS2, fill=Month, color=Month, shape=Lease_area)) +
geom_point(alpha=0.2, size=2.5, stroke=0.85) +
stat_ellipse(level = 0.95, size=1, alpha=0.2) +
geom_path(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2, group = Lease_area), color="black", linetype="solid",
size=1.15, arrow = arrow(length = unit(0.3, "cm"))) +
geom_point(data=mean_data, aes(x=meanNMDS1, y=meanNMDS2), color="black", size=4) +
theme_bw() +
guides(fill = "none", color = guide_legend(override.aes = list(alpha = 1))) +
labs(shape = "Lease area") +
scale_fill_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_color_manual(values = c("#0f4c5c", "#e36414", "#fb8b24", "#9a031e", "#5f0f40")) +
scale_shape_manual(values = c(21,22)) +
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size=12, face="bold"),
axis.text.y = element_text(colour = 'black', size = 10),
axis.text.x = element_text(colour = 'black', size = 10),
legend.title = element_text(margin = margin(t = 0, r = 0, b = 5, l = 0), size=10, color="black", face="bold"),
strip.text.x = element_text(color = "black", face = "bold", size = 12),
strip.background = element_rect(color= "black", fill = "white")
) +
facet_wrap(~Lease_area, ncol=2)
ggsave("data/results/NMDS.png", width = 8.5, height = 4)
meta <- read_xlsx("data/metadata/full_metadata.xlsx") %>%
filter(!is.na(Latitude))
min(meta$Latitude); max(meta$Latitude) ## 41.00194 - 41.2782
min(meta$Longitude); max(meta$Longitude) ## -71.2506 - -70.39897
world <- ne_countries(scale = "medium", returnclass = "sf")
library(ggplot2) ## for plotting
library(dplyr) ## for data table manipulation
library(tidyr) ## for data table manipulation
library(readr) ## for reading in tsv files
library(readxl) ## for reading in excel files
library(stringr) ## for data transformation
library(strex) ## for data transformation
library(writexl) ## for excel output
library(purrr) ## for data transformation
library(tidyverse) ## for data transformation
## for mapping
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library("ggspatial")
min(meta$Latitude); max(meta$Latitude) ## 41.00194 - 41.2782
min(meta$Longitude); max(meta$Longitude) ## -71.2506 - -70.39897
world <- ne_countries(scale = "medium", returnclass = "sf")
WindLeaseAreas <- terra::vect("data/metadata/Wind_Lease_Outlines_11_16_2023.shp")
WindLeaseAreas <- terra::vect("data/metadata/Wind_Lease_Outlines_11_16_2023.shp")
WindLeaseAreas <- terra::vect("data/metadata/Wind_Lease_Outlines_11_16_2023.shp")
library(terra)  # spatial (raster + vector) data analysis and mapping
WindLeaseAreas <- terra::vect("data/metadata/Wind_Lease_Outlines_11_16_2023.shp")
library(tidyterra)
WindLeaseAreas <- terra::vect("data/metadata/Wind_Lease_Outlines_11_16_2023.shp")
library(rnaturalearth)  # more spatial data download
WindLeaseAreas <- terra::vect("data/metadata/Wind_Lease_Outlines_11_16_2023.shp")
library(geodata)  # spatial data download
install.packages("geodata")
library(geodata)  # spatial data download
library(terra)  # spatial (raster + vector) data analysis and mapping
WindLeaseAreas <- terra::vect("data/metadata/Wind_Lease_Outlines_11_16_2023.shp")
