"0","ASV_table_taxID <- ASV_table %>% "
"0","  "
"0","  ## 1. Top hit from GMGI's database"
"0","  left_join(Blast_GMGI_edited %>% group_by(ASV_ID) %>% slice_max(pident, n = 1) %>%"
"0","                            dplyr::select(ASV_ID, Species_name) %>% ungroup(),"
"0","            by = join_by(ASV_ID)) %>%"
"0","  "
"0","  ## 2. Mitofish database"
"0","  ### join df, select ASV_ID and Species_name columns, rename Species_name to Mito, call only distinct rows"
"0","  left_join(., Blast_Mito %>% dplyr::select(ASV_ID, Species_name) %>% dplyr::rename(Mito = Species_name) %>% distinct() %>%"
"0","              "
"0","              ### group by ASV_ID, and collapse all species names separated by ;, then take only distinct rows"
"0","              group_by(ASV_ID) %>% mutate(Mito = paste0(Mito, collapse = "";"")) %>% distinct(), by = ""ASV_ID"") %>%"
"0","  "
"0","  ### if GMGI annotation is NA, then replace with Mitofish "
"0","  mutate(., Species_name = ifelse(is.na(Species_name), Mito, Species_name)) %>%"
"0",""
"0","  ## 3. NCBI database; same functions as above"
"0","  left_join(., Blast_NCBI %>% dplyr::select(ASV_ID, Species_name) %>% dplyr::rename(NCBI = Species_name) %>% distinct() %>%"
"0","              group_by(ASV_ID) %>% mutate(NCBI = paste0(NCBI, collapse = "";"")) %>% distinct(), by = ""ASV_ID"") %>%"
"0","  mutate(., Species_name = ifelse(is.na(Species_name), NCBI, Species_name)) %>%"
"0","  "
"0","  ## 4. if Species name is STILL not filled, call it ""unassigned"""
"0","  mutate(., Species_name = ifelse(is.na(Species_name), ""unassigned"", Species_name)) %>%  "
"0",""
"0","  ## removing Mito spp and NCBI spp"
"0","  dplyr::select(-Mito, -NCBI) %>%"
"0","  "
"0","  ## move species name to be after ASV_ID"
"0","  relocate(., c(Species_name), .after = ASV_ID)"
"0",""
"0","## confirming number of ASVs in ASV_table and ASV_table_taxID"
"0","## the output should be TRUE"
"0","nrow(ASV_table) == nrow(ASV_table_taxID)"
"1","[1]"
"1"," TRUE"
"1","
"
